[{"/home/william/houseplant-nurse/client/src/index.js":"1","/home/william/houseplant-nurse/client/src/reportWebVitals.js":"2","/home/william/houseplant-nurse/client/src/App.js":"3"},{"size":500,"mtime":1608483796758,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1608483796758,"results":"6","hashOfConfig":"5"},{"size":3392,"mtime":1608680512064,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"zsu65k",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"/home/william/houseplant-nurse/client/src/index.js",[],["17","18"],"/home/william/houseplant-nurse/client/src/reportWebVitals.js",[],["19","20"],"/home/william/houseplant-nurse/client/src/App.js",["21","22","23"],"import React, {Component} from 'react';\nimport './App.css';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { FixedSizeList } from 'react-window';\nimport {AutoSizer} from 'react-virtualized'; \n\nimport Grid from '@material-ui/core/Grid';\n\nfunction getFileName(scientificName) {\n  const suffix = scientificName.trim().toLowerCase().replace(/ /g,\"-\").replace(\"â€˜\", \"(\").replace(\"â€™\", \")\");\n  return `${process.env.PUBLIC_URL}/assets/plant-avatars/${suffix}.jpg`\n}\n\nfunction getBigFileName(scientificName) {\n  const suffix = scientificName.trim().toLowerCase().replace(/ /g,\"-\").replace(\"â€˜\", \"(\").replace(\"â€™\", \")\");\n  return `${process.env.PUBLIC_URL}/assets/plant-images/${suffix}.jpg`\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: [],\n      currentPlant: null\n    };\n\n    this.Row = this.Row.bind(this);\n  }\n\n  handleClick(Id) {\n    const clickedPlant = this.state.plants.find(plant => plant.Id === Id);\n    this.setState({ currentPlant: clickedPlant });\n  }\n\n  Row (data) {\n    if (this.state.plants.length === 0) {\n      return false;\n    }\n\n    const plant = this.state.plants[data.index];\n\n    return <ListItem style={data.style} button={true} onClick={() => this.handleClick(plant.Id)} key={plant.id}>\n              <ListItemAvatar>\n                <Avatar src={getFileName(plant.ScientificName)} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={plant.CommonName}\n                secondary={plant.ScientificName}\n              />\n            </ListItem>\n  }\n\n  plantList() {\n    return (\n      <Grid item xs>\n        <div className=\"PlantList\">\n        <AutoSizer>\n          {({ width, height }) => (\n          <FixedSizeList\n            height={height}\n            width={width}\n            itemSize={80}\n            itemCount={this.state.plants.length}\n          >\n            {this.Row}\n          </FixedSizeList>\n          )}\n          </AutoSizer>\n        </div>\n      </Grid>\n    )\n  }\n\n  plantView() {\n    return (\n      <Grid item xs>\n        <div className=\"PlantView\">\n          <p>{this.state.currentPlant.ScientificName} ({this.state.currentPlant.CommonName})</p>\n          <img src={getBigFileName(this.state.currentPlant.ScientificName)}\n          style={{\n            margin: 'auto',\n            display: 'block',\n            maxWidth: '100%',\n            maxHeight: '100%',\n          }}/>\n        </div>\n      </Grid>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App-header\">Houseplant Nurse ðŸŒ±</h1>\n        <Grid container spacing={1}\n          alignItems=\"stretch\"\n          className=\"Main-Grid\"\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          {this.plantList()}\n          {(this.state.currentPlant != null) &&\n            this.plantView()\n          }\n        </Grid>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    fetch(`${process.env.PUBLIC_URL}/api/plants`)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ plants: data.plants })\n        })\n        .catch(console.log)\n  }\n}\n\nexport default App;\n",{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"24","replacedBy":"28"},{"ruleId":"26","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":4,"column":8,"nodeType":"32","messageId":"33","endLine":4,"endColumn":12},{"ruleId":"34","severity":1,"message":"35","line":84,"column":11,"nodeType":"36","endLine":90,"endColumn":15},{"ruleId":"37","severity":1,"message":"38","line":105,"column":11,"nodeType":"39","endLine":105,"endColumn":30},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],["40"],["41"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]