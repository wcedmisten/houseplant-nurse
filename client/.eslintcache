[{"/home/wce/houseplant-nurse/client/src/index.js":"1","/home/wce/houseplant-nurse/client/src/App.js":"2","/home/wce/houseplant-nurse/client/src/reportWebVitals.js":"3"},{"size":500,"mtime":1608001722709,"results":"4","hashOfConfig":"5"},{"size":2970,"mtime":1608091121543,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1607877937903,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1if895",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/wce/houseplant-nurse/client/src/index.js",[],["17","18"],"/home/wce/houseplant-nurse/client/src/App.js",["19","20"],"import React, {Component} from 'react';\nimport './App.css';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { FixedSizeList } from 'react-window';\nimport Grid from '@material-ui/core/Grid';\n\nfunction getFileName(scientificName) {\n  const suffix = scientificName.split('â€˜')[0].trim().toLowerCase().replace(\" \", \"-\");\n  return `${process.env.PUBLIC_URL}/assets/plant-avatars/${suffix}.jpg`\n}\n\nfunction getBigFileName(scientificName) {\n  const suffix = scientificName.split('â€˜')[0].trim().toLowerCase().replace(\" \", \"-\");\n  return `${process.env.PUBLIC_URL}/assets/plant-images/${suffix}.jpg`\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      plants: [],\n      currentPlant: null\n    };\n\n    this.Row = this.Row.bind(this);\n  }\n\n  handleClick(Id) {\n    const clickedPlant = this.state.plants.find(plant => plant.Id === Id);\n    this.setState({ currentPlant: clickedPlant });\n  }\n\n  Row (data) {\n    if (this.state.plants.length === 0) {\n      return false;\n    }\n\n    const plant = this.state.plants[data.index];\n\n    return <ListItem style={data.style} button={true} onClick={() => this.handleClick(plant.Id)} key={plant.id}>\n              <ListItemAvatar>\n                <Avatar src={getFileName(plant.ScientificName)} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={plant.CommonName}\n                secondary={plant.ScientificName}\n              />\n            </ListItem>\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App-h1\">Houseplant Nurse ðŸŒ±</h1>\n        <Grid container spacing={1}>\n          <Grid container item xs={12} sm={6}>\n            <div className=\"plantList\">\n              <FixedSizeList\n                height={800}\n                width={500}\n                itemSize={80}\n                itemCount={this.state.plants.length}\n              >\n                {this.Row}\n              </FixedSizeList>\n            </div>\n          </Grid>\n          {(this.state.currentPlant != null) &&\n          <Grid container item xs={12} sm={6}>\n            <div className=\"plantView\">\n              <p>{this.state.currentPlant.ScientificName} ({this.state.currentPlant.CommonName})</p>\n              <img src={getBigFileName(this.state.currentPlant.ScientificName)}\n              style={{\n                height: '100%',\n                width: '100%'\n              }}/>\n            </div>\n          </Grid>\n          }\n        </Grid>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    fetch(`${process.env.PUBLIC_URL}/api/plants`)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ plants: data.plants })\n        })\n        .catch(console.log)\n  }\n}\n\nexport default App;\n","/home/wce/houseplant-nurse/client/src/reportWebVitals.js",[],["21","22"],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":4,"column":8,"nodeType":"29","messageId":"30","endLine":4,"endColumn":12},{"ruleId":"31","severity":1,"message":"32","line":77,"column":15,"nodeType":"33","endLine":81,"endColumn":19},{"ruleId":"23","replacedBy":"34"},{"ruleId":"25","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["36"],["37"],"no-global-assign","no-unsafe-negation"]